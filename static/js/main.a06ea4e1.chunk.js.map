{"version":3,"sources":["Card.js","Cardlist.js","SearchBox.js","Scorll.js","ErrorBoundry.js","App.js","reportWebVitals.js","index.js"],"names":["Card","email","name","id","className","alt","src","Cardlist","Animename","map","user","i","SearchBox","searchfield","searchChange","type","onChange","placeholder","Scorll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","Error","info","this","setstate","Component","App","onSearchChange","e","setState","target","value","fetch","then","response","json","users","fillterAnime","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oOAceA,EAZF,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,GAC7B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,QAAQC,IAAG,oCAA+BH,EAA/B,mBACpB,gCACC,6BAAKD,IACL,4BAAID,WCWQM,EAhBE,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACnB,OACC,8BAEEA,EAAUC,KAAI,SAACC,EAAMC,GACpB,OACC,cAAC,EAAD,CAAcR,GAAIK,EAAUG,GAAGR,GAC/BD,KAAMM,EAAUG,GAAGT,KACnBD,MAAOO,EAAUG,GAAGV,OAFTU,SCIFC,EAXG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKV,UAAU,OAAf,SACC,uBAAOA,UAAW,mCAClBW,KAAM,SAASC,SAAUF,EACzBG,YAAc,oBCGFC,EARA,SAACC,GACf,OACC,qBAAKC,MAAQ,CAAEC,UAAW,SAAWC,OAAQ,kBAAoBC,OAAQ,SAAzE,SACEJ,EAAMK,YCkBKC,G,wDApBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHM,E,8DAOAC,EAAQC,GACzBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAK1B,OAAIG,KAAKJ,MAAMD,aACP,2DAEDK,KAAKX,MAAMK,a,GAjBOQ,cCgDZC,E,kDAxCd,aAAc,IAAD,8BACZ,gBAaDC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAAEvB,YAAasB,EAAEE,OAAOC,SAbzC,EAAKZ,MAAQ,CACZlB,UAAW,GACXK,YAAa,IAJF,E,gEAQO,IAAD,OAClB0B,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKP,SAAS,CAAE5B,UAAWmC,S,+BAOlC,IAAD,OACDC,EAAed,KAAKJ,MAAMlB,UAAUqC,QAAO,SAAArC,GAChD,OAAOA,EAAUN,KAAK4C,cAAcC,SAAS,EAAKrB,MAAMb,YAAYiC,kBAErE,OAAoC,IAAhChB,KAAKJ,MAAMlB,UAAUwC,OACjB,oBAAI5C,UAAU,KAAd,qBAGN,sBAAKA,UAAU,YAAf,UACC,8CACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU1B,UAAWoC,e,GAhCVZ,aCGHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OAEN,cAAC,EAAD,IAEAC,SAASC,eAAe,SAM3BX,M","file":"static/js/main.a06ea4e1.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ email, name, id }) =>{\r\nreturn(\r\n\t<div className=\"tc bg-light-green dib bw2 shadow-5 br3 pa3 ma3 grow\">\r\n\t\t<img alt=\"anime\" src={`https://robohash.org/baby/${id}?size=200x200`}/>\r\n\t\t<div>\r\n\t\t\t<h3>{name}</h3>\r\n\t\t\t<p>{email}</p>\r\n\t\t</div>\r\n\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst Cardlist = ({ Animename }) => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\t\tAnimename.map((user, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Card key={i} id={Animename[i].id} \r\n\t\t\t\t\t\tname={Animename[i].name} \r\n\t\t\t\t\t\temail={Animename[i].email}/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn(\r\n\t\t<div className=\"pa2 \">\r\n\t\t\t<input className =\"pa3 ba b--green bg-lightest-blue\"\r\n\t\t\ttype =\"search\" onChange={searchChange} \r\n\t\t\tplaceholder = \"Search Anime\"/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scorll = (props) =>{\r\n\treturn(\r\n\t\t<div style ={{ overflowY: \"scroll\" , border: \"1px solid black\" , height: \"500px\" }}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Scorll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(Error , info){\r\n\t\tthis.setstate({ hasError: true })\r\n\t}\r\n\r\n\r\n\trender(){\r\n\t\tif (this.state.ErrorBoundry){\r\n\t\t\treturn <h1> opps file has some Error</h1>;\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport Cardlist from './Cardlist';\r\nimport SearchBox from './SearchBox';\r\nimport Scorll from './Scorll';\r\n// import { Animename } from './Animename';\r\nimport './App.css';\r\nimport ErrorBoundry from './ErrorBoundry';\r\n\r\n\r\nclass App extends Component { \r\n\tconstructor(){\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tAnimename: [],\r\n\t\t\tsearchfield: '',\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(users => this.setState({ Animename: users }));\r\n\t}\r\n\r\n\tonSearchChange = (e) => {\r\n    \tthis.setState({ searchfield: e.target.value })\r\n    \t\r\n  \t};\r\n\trender(){\r\n\t\tconst fillterAnime = this.state.Animename.filter(Animename =>{\r\n\t\t\treturn Animename.name.toLowerCase().includes(this.state.searchfield.toLowerCase())\r\n\t\t})\r\n\t\tif (this.state.Animename.length === 0) {\r\n\t\t\treturn <h1 className=\"tc\">Loading</h1>\r\n\t\t}else{\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"tc fontsz\">\r\n\t\t\t\t\t<h1>AnimeFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t\t<Scorll>\r\n\t\t\t\t\t\t<ErrorBoundry>\r\n\t\t\t\t\t\t\t<Cardlist Animename={fillterAnime}/>\r\n\t\t\t\t\t\t</ErrorBoundry>\r\n\t\t\t\t\t</Scorll>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n// import { Animename } from './Animename';\r\n\r\nReactDOM.render(\r\n\r\n  \t<App />\r\n\r\n , document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}